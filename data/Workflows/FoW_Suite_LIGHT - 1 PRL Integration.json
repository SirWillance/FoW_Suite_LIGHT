{
  "last_node_id": 22,
  "last_link_id": 20,
  "nodes": [
    {
      "id": 5,
      "type": "FoWLPromptRefinerLight",
      "pos": [
        592.0830688476562,
        683.8002319335938
      ],
      "size": [
        252,
        118
      ],
      "flags": {},
      "order": 14,
      "mode": 0,
      "inputs": [
        {
          "name": "clip",
          "type": "CLIP",
          "link": 5
        }
      ],
      "outputs": [
        {
          "name": "Positive Conditioning",
          "type": "CONDITIONING",
          "links": [
            6
          ],
          "slot_index": 0
        },
        {
          "name": "Negative Conditioning",
          "type": "CONDITIONING",
          "links": [
            7
          ],
          "slot_index": 1
        },
        {
          "name": "Combined Positive Prompt",
          "type": "STRING",
          "links": null
        },
        {
          "name": "Combined Negative Prompt",
          "type": "STRING",
          "links": null
        }
      ],
      "properties": {
        "cnr_id": "fow-suite-light",
        "ver": "b1b1fdbbe776159465d0246e37533e9ecd8265a9",
        "aux_id": "SirWillance/FoW_Suite_LIGHT"
      },
      "widgets_values": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "open_editor"
      ]
    },
    {
      "id": 3,
      "type": "VAEDecode",
      "pos": [
        1269.82666015625,
        683.8002319335938
      ],
      "size": [
        210,
        46
      ],
      "flags": {},
      "order": 18,
      "mode": 0,
      "inputs": [
        {
          "name": "samples",
          "type": "LATENT",
          "link": 3
        },
        {
          "name": "vae",
          "type": "VAE",
          "link": 2
        }
      ],
      "outputs": [
        {
          "name": "IMAGE",
          "type": "IMAGE",
          "links": [
            4
          ],
          "slot_index": 0
        }
      ],
      "properties": {
        "cnr_id": "comfy-core",
        "ver": "0.3.15",
        "Node name for S&R": "VAEDecode"
      },
      "widgets_values": []
    },
    {
      "id": 4,
      "type": "PreviewImage",
      "pos": [
        1522.1268310546875,
        683.8002319335938
      ],
      "size": [
        210,
        246
      ],
      "flags": {},
      "order": 20,
      "mode": 0,
      "inputs": [
        {
          "name": "images",
          "type": "IMAGE",
          "link": 4
        }
      ],
      "outputs": [],
      "properties": {
        "cnr_id": "comfy-core",
        "ver": "0.3.15",
        "Node name for S&R": "PreviewImage"
      },
      "widgets_values": []
    },
    {
      "id": 7,
      "type": "VAEDecode",
      "pos": [
        1392.568115234375,
        -452.71905517578125
      ],
      "size": [
        210,
        46
      ],
      "flags": {},
      "order": 17,
      "mode": 0,
      "inputs": [
        {
          "name": "samples",
          "type": "LATENT",
          "link": 9
        },
        {
          "name": "vae",
          "type": "VAE",
          "link": 10
        }
      ],
      "outputs": [
        {
          "name": "IMAGE",
          "type": "IMAGE",
          "links": [
            11
          ],
          "slot_index": 0
        }
      ],
      "properties": {
        "cnr_id": "comfy-core",
        "ver": "0.3.15",
        "Node name for S&R": "VAEDecode"
      },
      "widgets_values": []
    },
    {
      "id": 8,
      "type": "PreviewImage",
      "pos": [
        1644.8682861328125,
        -452.71905517578125
      ],
      "size": [
        210,
        246
      ],
      "flags": {},
      "order": 19,
      "mode": 0,
      "inputs": [
        {
          "name": "images",
          "type": "IMAGE",
          "link": 11
        }
      ],
      "outputs": [],
      "properties": {
        "cnr_id": "comfy-core",
        "ver": "0.3.15",
        "Node name for S&R": "PreviewImage"
      },
      "widgets_values": []
    },
    {
      "id": 13,
      "type": "FoWLPromptRefinerLight",
      "pos": [
        632.0140380859375,
        101.70990753173828
      ],
      "size": [
        252,
        118
      ],
      "flags": {},
      "order": 0,
      "mode": 0,
      "inputs": [
        {
          "name": "clip",
          "type": "CLIP",
          "link": null
        }
      ],
      "outputs": [
        {
          "name": "Positive Conditioning",
          "type": "CONDITIONING",
          "links": [],
          "slot_index": 0
        },
        {
          "name": "Negative Conditioning",
          "type": "CONDITIONING",
          "links": [],
          "slot_index": 1
        },
        {
          "name": "Combined Positive Prompt",
          "type": "STRING",
          "links": null
        },
        {
          "name": "Combined Negative Prompt",
          "type": "STRING",
          "links": null
        }
      ],
      "properties": {
        "cnr_id": "fow-suite-light",
        "ver": "b1b1fdbbe776159465d0246e37533e9ecd8265a9",
        "aux_id": "SirWillance/FoW_Suite_LIGHT"
      },
      "widgets_values": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "open_editor"
      ]
    },
    {
      "id": 10,
      "type": "CheckpointLoaderSimple",
      "pos": [
        144.4973907470703,
        -451.2549133300781
      ],
      "size": [
        315,
        98
      ],
      "flags": {},
      "order": 1,
      "mode": 0,
      "inputs": [],
      "outputs": [
        {
          "name": "MODEL",
          "type": "MODEL",
          "links": [
            12
          ],
          "slot_index": 0
        },
        {
          "name": "CLIP",
          "type": "CLIP",
          "links": [
            15,
            17
          ],
          "slot_index": 1
        },
        {
          "name": "VAE",
          "type": "VAE",
          "links": [
            10
          ],
          "slot_index": 2
        }
      ],
      "properties": {
        "cnr_id": "comfy-core",
        "ver": "0.3.15",
        "Node name for S&R": "CheckpointLoaderSimple"
      },
      "widgets_values": [
        "SDXL 1.0 - juggernautXL_juggXIByRundiffusion.safetensors"
      ]
    },
    {
      "id": 1,
      "type": "CheckpointLoaderSimple",
      "pos": [
        198.91140747070312,
        683.8002319335938
      ],
      "size": [
        315,
        98
      ],
      "flags": {},
      "order": 2,
      "mode": 0,
      "inputs": [],
      "outputs": [
        {
          "name": "MODEL",
          "type": "MODEL",
          "links": [
            1
          ],
          "slot_index": 0
        },
        {
          "name": "CLIP",
          "type": "CLIP",
          "links": [
            5
          ],
          "slot_index": 1
        },
        {
          "name": "VAE",
          "type": "VAE",
          "links": [
            2
          ],
          "slot_index": 2
        }
      ],
      "properties": {
        "cnr_id": "comfy-core",
        "ver": "0.3.15",
        "Node name for S&R": "CheckpointLoaderSimple"
      },
      "widgets_values": [
        "SDXL 1.0 - juggernautXL_juggXIByRundiffusion.safetensors"
      ]
    },
    {
      "id": 16,
      "type": "EmptyLatentImage",
      "pos": [
        180.67971801757812,
        -244.0990753173828
      ],
      "size": [
        315,
        106
      ],
      "flags": {},
      "order": 3,
      "mode": 0,
      "inputs": [],
      "outputs": [
        {
          "name": "LATENT",
          "type": "LATENT",
          "links": [
            20
          ]
        }
      ],
      "properties": {
        "cnr_id": "comfy-core",
        "ver": "0.3.15",
        "Node name for S&R": "EmptyLatentImage"
      },
      "widgets_values": [
        960,
        544,
        1
      ]
    },
    {
      "id": 15,
      "type": "EmptyLatentImage",
      "pos": [
        198.06900024414062,
        838.07666015625
      ],
      "size": [
        315,
        106
      ],
      "flags": {},
      "order": 4,
      "mode": 0,
      "inputs": [],
      "outputs": [
        {
          "name": "LATENT",
          "type": "LATENT",
          "links": [
            19
          ]
        }
      ],
      "properties": {
        "cnr_id": "comfy-core",
        "ver": "0.3.15",
        "Node name for S&R": "EmptyLatentImage"
      },
      "widgets_values": [
        960,
        544,
        1
      ]
    },
    {
      "id": 11,
      "type": "CLIPTextEncode",
      "pos": [
        542.732421875,
        -669.547119140625
      ],
      "size": [
        400,
        200
      ],
      "flags": {},
      "order": 12,
      "mode": 0,
      "inputs": [
        {
          "name": "clip",
          "type": "CLIP",
          "link": 15
        }
      ],
      "outputs": [
        {
          "name": "CONDITIONING",
          "type": "CONDITIONING",
          "links": [
            16
          ],
          "slot_index": 0
        }
      ],
      "properties": {
        "cnr_id": "comfy-core",
        "ver": "0.3.15",
        "Node name for S&R": "CLIPTextEncode"
      },
      "widgets_values": [
        "An apple, on a tree, realistic, wide shot,\nmasterpiece, detailed, soft lighting"
      ],
      "color": "#232",
      "bgcolor": "#353"
    },
    {
      "id": 12,
      "type": "CLIPTextEncode",
      "pos": [
        536.875732421875,
        -299.13134765625
      ],
      "size": [
        400,
        200
      ],
      "flags": {},
      "order": 13,
      "mode": 0,
      "inputs": [
        {
          "name": "clip",
          "type": "CLIP",
          "link": 17
        }
      ],
      "outputs": [
        {
          "name": "CONDITIONING",
          "type": "CONDITIONING",
          "links": [
            18
          ],
          "slot_index": 0
        }
      ],
      "properties": {
        "cnr_id": "comfy-core",
        "ver": "0.3.15",
        "Node name for S&R": "CLIPTextEncode"
      },
      "widgets_values": [
        "watermark, text, logo, signature, red, bad quality, bad lighting"
      ],
      "color": "#322",
      "bgcolor": "#533"
    },
    {
      "id": 17,
      "type": "Note",
      "pos": [
        1162.3758544921875,
        1081.774658203125
      ],
      "size": [
        668.9121704101562,
        526.3618774414062
      ],
      "flags": {
        "collapsed": true
      },
      "order": 5,
      "mode": 0,
      "inputs": [],
      "outputs": [],
      "title": "Note: Sampler",
      "properties": {},
      "widgets_values": [
        "Euler:\nDescription: A fast and basic sampler, known for its simplicity.\nStrengths: Quick, efficient, and good for preliminary testing.\nWeaknesses: Can produce less detailed images, may exhibit some artifacts, and might produce images that are not perfectly sharp.\nUse Case: Ideal for quick iterations and preliminary explorations. Not recommended for final logo generation.\n\nEuler a:\nDescription: A modified version of Euler, using an ancestral sampling method.\nStrengths: Can generate more varied results, more creative and less predictable results, and often has better overall visual fidelity.\nWeaknesses: Can take longer than the regular Euler, might generate unexpected results, and might not be as consistent.\nUse Case: Ideal for testing and exploring, but may not be ideal for the final logo generation.\n\nLMS (Least Mean Squares):\nDescription: A more advanced sampler that is more stable and accurate than Euler.\nStrengths: Produces more detailed and coherent images, more accurate, and it has a good balance between quality and efficiency.\nWeaknesses: Can be slower than Euler, but is faster than more complex samplers.\nUse Case: Good general-purpose sampler, ideal for images with good detail, and well-suited for the logo generation.\n\nHeun:\nDescription: A more accurate and precise sampler compared to Euler.\nStrengths: Generates high-quality details, good overall visual fidelity, accurate and precise results.\nWeaknesses: Can be slower than Euler and LMS, and can be unpredictable sometimes.\nUse Case: Useful for images where you need high-quality details, but might not be as stable as LMS for iterative workflows.\n\nDPM2:\nDescription: A popular sampler known for its balance of speed and quality.\nStrengths: Relatively fast while still producing detailed and accurate images, good balance between quality and efficiency, a very stable sampler.\nWeaknesses: May not be as detailed as some other options, and can produce images with some minor visual inconsistencies.\nUse Case: Good overall sampler for multiple use cases, a good choice for the final logo generation.\n\nDPM2 a (ancestral):\nDescription: A variation of DPM2, using an ancestral sampling method.\nStrengths: Can produce more creative and unique images, has good overall quality, and more flexible compared to DPM2.\nWeaknesses: Can be less consistent compared to DPM2, and might have some unpredictable results.\nUse Case: Ideal for exploring creative variations, but may not be the best option for the final logo generation.\n\nDPM++ SDE:\nDescription: A more advanced sampler that tries to reduce noise and create images with a good overall quality.\nStrengths: High quality, good for complex images and generates very detailed and accurate results.\nWeaknesses: It's the slowest sampler, and may be overkill for simple generation.\nUse Case: Useful for extremely high-quality images with lots of details, but is not recommended for quick generations."
      ],
      "color": "#432",
      "bgcolor": "#653"
    },
    {
      "id": 18,
      "type": "Note",
      "pos": [
        1298.1043701171875,
        1100.589111328125
      ],
      "size": [
        668.9121704101562,
        526.3618774414062
      ],
      "flags": {
        "collapsed": true
      },
      "order": 6,
      "mode": 0,
      "inputs": [],
      "outputs": [],
      "title": "Note: Schedular",
      "properties": {},
      "widgets_values": [
        "Simplified Breakdown \nLet's categorize this information for the main schedulers:\n\n1. Normal:\nDescription: Standard, linear noise schedule.\nInfluence: Stable, predictable, good baseline.\n-Recommendation of Use: Good starting point, general use, comparison.\n\n2. Karras (Exponential/Polyexponential):\nDescription: Non-linear, focuses denoising later.\nInfluence: Improved detail, contrast, fewer artifacts, especially at lower steps.\n-Recommendation of Use: Highly recommended for general use and lower step counts.\n\n3. Exponential:\nDescription: Non-linear, emphasizes later denoising.\nInfluence: Similar to Karras - better detail, fewer artifacts.\n-Recommendation of Use: Good alternative to Karras, experiment to see preference.\n\n4. Other Less Common Schedulers (e.g., Simple, L Simple, or those specific to certain samplers/interfaces):\nDescription: These might represent variations on linear or non-linear schedules or be specific implementations tied to particular samplers. \"Simple\" or \"L Simple\" might be simplified linear schedules.\nPurpose: Often designed for specific research purposes, experimental workflows, or to address particular limitations of other schedules.\nInfluence: Their influence can vary greatly depending on the specific algorithm. Some might be faster but produce lower quality, while others might have unique effects on the image structure or style.\n-Recommendation of Use:\nUse with caution if you don't fully understand their implications.\nGenerally, stick with \"Normal,\" \"Karras,\" or \"Exponential\" for standard workflows unless you have a specific reason to try others.\nResearch the specific scheduler if you encounter it and are unsure of its purpose.\n\nDetailed Xplenation\n\nCommon Scheduler (Noise Schedule) Options:\n1. Normal:\nDescription: This is often the default or a standard linear noise schedule. It assumes a relatively consistent rate of noise addition and removal throughout the sampling steps.\nPurpose: Provides a baseline or conventional approach to the denoising process.\nInfluence: Results can be generally predictable and stable. It often works well for a wide range of models and prompts. May not be the most efficient or produce the most visually striking results compared to other schedules.\nRecommendation of Use:\nGood starting point if you're unsure which schedule to use.\nCan be a reliable choice for general-purpose image generation.\nUseful for comparing against other schedules to understand their effects.\n\n2. Karras (or Exponential/Polyexponential in some implementations):\nDescription: This is a non-linear noise schedule that concentrates more of the denoising effort in the later stages of the sampling process. It changes the shape of the noise curve, often using an exponential or polynomial function.\nPurpose: Designed to improve image quality, especially at lower step counts. It allows the model to focus on refining details and coherence in the later, more crucial stages.\nInfluence: Often leads to better detail, improved contrast, and fewer artifacts, especially when using fewer sampling steps. Can make images appear more \"finished\" with fewer iterations.\nRecommendation of Use:\nHighly recommended for general use. It's often considered a significant improvement over the \"Normal\" schedule.\nEspecially beneficial when using lower step counts to save time without sacrificing much quality.\nTry this schedule first if you're looking to enhance the visual quality of your generations.\n\n3. Exponential:\nDescription: Similar to Karras, this is another non-linear schedule that emphasizes the later denoising steps. The noise curve follows an exponential function.\nPurpose: Like Karras, the goal is to improve image quality by focusing on refinement in the later stages.\nInfluence: Similar benefits to Karras – better detail, contrast, and fewer artifacts, particularly with fewer steps. The specific characteristics might have subtle differences compared to Karras depending on the exact implementation.\nRecommendation of Use:\nA good alternative to Karras. Experiment with both to see which you prefer with your specific models and prompts.\nEffective for lower step counts.\n\n"
      ],
      "color": "#432",
      "bgcolor": "#653"
    },
    {
      "id": 19,
      "type": "Note",
      "pos": [
        1048.5076904296875,
        1062.079833984375
      ],
      "size": [
        668.9121704101562,
        526.3618774414062
      ],
      "flags": {
        "collapsed": true
      },
      "order": 7,
      "mode": 0,
      "inputs": [],
      "outputs": [],
      "title": "Note: CFG",
      "properties": {},
      "widgets_values": [
        "2. CFG Scale (Classifier-Free Guidance):\n\nWhat it does: The CFG Scale controls how closely the AI adheres to your prompt. It determines how much influence your prompt will have on the image generation process.\n\nImpact on Image:\nHigher CFG Values: Higher values (e.g., 10-15) make the AI stick very closely to your prompt. This can lead to images that are more aligned with your specific intentions, but may reduce creative freedom and make the image less creative. It is useful to get a result that is closer to what you want, but is less flexible.\nLower CFG Values: Lower values (e.g., 3-7) give the AI more freedom and flexibility. This may result in more creative and unexpected outputs, but with less precise adherence to your original prompt, and you might be getting images that are very different from your vision. It is useful to explore different variations, but you might have issues to reach your target.\n\nGeneral Guideline:\nValues between 5 and 10 often produce the best balance between prompt adherence and artistic interpretation.\nValues between 10 and 15 should be used if you want to be sure that the image will resemble more what you want to see.\nValues between 3 and 5 are usually used when you want to explore unique results and you do not need a specific outcome.\nRecommendation for Your Logo Generation:\n\nCFG Scale:\nInitial Testing (8-10): Start with a CFG scale of 8-10. This provides a balance between following your prompt and allowing creative freedom.\nRefinement (10-12): If you are very close to a specific result, you may want to increase this to 10-12, if you want a more defined image.\nExploration (5-7): If you are trying different approaches, then values between 5-7 will be a great starting point.\n\nInfluence:\nCFG 1-5: Very creative, loose interpretation of the prompt.\nCFG 6-10: Balanced, good for most prompts.\nCFG 11+: Strict adherence to the prompt, but may lose naturalness.\n\nScheduler:\nNormal: Stick to the normal approach, if you are only interested in testing different prompts and getting stable and reliable results.\nKarras: If you are looking for a more accurate and refined sampler, then Karras is a good option."
      ],
      "color": "#432",
      "bgcolor": "#653"
    },
    {
      "id": 20,
      "type": "Note",
      "pos": [
        930.8176879882812,
        1135.196533203125
      ],
      "size": [
        695.66796875,
        195.98651123046875
      ],
      "flags": {
        "collapsed": true
      },
      "order": 8,
      "mode": 0,
      "inputs": [],
      "outputs": [],
      "title": "Note: Denoise",
      "properties": {},
      "widgets_values": [
        "Denoise in a KSampler: The \"denoise\" setting in a KSampler controls how much the sampler changes the initial image (or \"latent\").\n\nDenoise near 1: The sampler makes big changes, creating a new image from scratch based on your prompt.\n\nDenoise near 0: The sampler makes small changes, only adding details to the initial image while generally keeping the original composition.\n\nIt's like painting:\n\nHigh denoise: Starting with a blank canvas and painting a whole new picture.\n\nLow denoise: Touching up an existing painting, adding highlights and shadows, but not changing the overall scene."
      ],
      "color": "#432",
      "bgcolor": "#653"
    },
    {
      "id": 21,
      "type": "Note",
      "pos": [
        930.5842895507812,
        1041.214111328125
      ],
      "size": [
        668.9121704101562,
        526.3618774414062
      ],
      "flags": {
        "collapsed": true
      },
      "order": 9,
      "mode": 0,
      "inputs": [],
      "outputs": [],
      "title": "Note: Steps",
      "properties": {},
      "widgets_values": [
        "1. Steps\nWhat it is: Steps refer to the number of iterations the AI takes to refine the image from noise to a clear picture. Think of it as the AI \"thinking\" multiple times to improve the image.\n\nHow it works:\n\nMore steps = more refinement, but diminishing returns after a certain point.\n\nFewer steps = faster generation, but potentially less detail or coherence.\n\nInfluence:\n\nLow steps (10-20): Quick, but may lack detail or accuracy.\n\nMedium steps (20-50): Balanced, good for most use cases.\n\nHigh steps (50+): Highly detailed, but slower and may over-refine (can sometimes make the image look unnatural).\n\nRecommendation: Start with 20-30 steps for a good balance of speed and quality. Increase if you need more detail."
      ],
      "color": "#432",
      "bgcolor": "#653"
    },
    {
      "id": 22,
      "type": "Note",
      "pos": [
        216.87611389160156,
        625.720458984375
      ],
      "size": [
        309.8563537597656,
        404.69189453125
      ],
      "flags": {
        "collapsed": true
      },
      "order": 10,
      "mode": 0,
      "inputs": [],
      "outputs": [],
      "title": "Note: Checkpoint",
      "properties": {},
      "widgets_values": [
        "Checkpoint Loader: A Checkpoint Loader node loads a pre-trained AI model that understands concepts and relationships, and can generate a new prompt from those loaded data.\n\nThink of it like loading a specific \"brain\" into your AI. This brain has been trained on a massive dataset of images and text, and it knows how to connect words to visual concepts. The larger the dataset, the higher the quality of generations.\n\nIt is a mandatory initial function in the Comfy UI, so the UI knows \"\"what style\"\" will generate from all connections\n\nWithout a Checkpoint Loader: The AI has no knowledge of the world or how to create images, because you have not connected \"\"A BRAIN\"\" to it.\n\nIt is also a “” required “” configuration to most AI generators (SDXL, SVD etc)\nIt is all clear? Do you want to me go further on the explanation?\n\nFind your Checkpoints and also Lora's\nat \nhttps://civitai.com/models"
      ],
      "color": "#432",
      "bgcolor": "#653"
    },
    {
      "id": 14,
      "type": "Note",
      "pos": [
        983.808837890625,
        -5.786126136779785
      ],
      "size": [
        425.49945068359375,
        289.8636779785156
      ],
      "flags": {
        "collapsed": false
      },
      "order": 11,
      "mode": 0,
      "inputs": [],
      "outputs": [],
      "title": "Note: Prompt Refiner",
      "properties": {},
      "widgets_values": [
        "The Prompt Refiner Light\nServes u as an intuitive interface to enter your positive and your negative prompt.\nYou simply connect the clip input to it and take the positive and the negative condition from the node and connect it to the KSampler.\nThe window can be Minimized and maximized again saving Your Prompt state.\nthe window is draggable so u can leave the node behind and work with the input from where ever u want.\n\nEnjoy 😁"
      ],
      "color": "#432",
      "bgcolor": "#653"
    },
    {
      "id": 9,
      "type": "KSampler",
      "pos": [
        1035.268310546875,
        -452.71905517578125
      ],
      "size": [
        315,
        262
      ],
      "flags": {},
      "order": 15,
      "mode": 0,
      "inputs": [
        {
          "name": "model",
          "type": "MODEL",
          "link": 12
        },
        {
          "name": "positive",
          "type": "CONDITIONING",
          "link": 16
        },
        {
          "name": "negative",
          "type": "CONDITIONING",
          "link": 18
        },
        {
          "name": "latent_image",
          "type": "LATENT",
          "link": 20
        }
      ],
      "outputs": [
        {
          "name": "LATENT",
          "type": "LATENT",
          "links": [
            9
          ]
        }
      ],
      "properties": {
        "cnr_id": "comfy-core",
        "ver": "0.3.15",
        "Node name for S&R": "KSampler"
      },
      "widgets_values": [
        419716353039943,
        "fixed",
        20,
        8,
        "euler",
        "normal",
        1
      ]
    },
    {
      "id": 2,
      "type": "KSampler",
      "pos": [
        912.5264892578125,
        683.8002319335938
      ],
      "size": [
        315,
        262
      ],
      "flags": {},
      "order": 16,
      "mode": 0,
      "inputs": [
        {
          "name": "model",
          "type": "MODEL",
          "link": 1
        },
        {
          "name": "positive",
          "type": "CONDITIONING",
          "link": 6
        },
        {
          "name": "negative",
          "type": "CONDITIONING",
          "link": 7
        },
        {
          "name": "latent_image",
          "type": "LATENT",
          "link": 19
        }
      ],
      "outputs": [
        {
          "name": "LATENT",
          "type": "LATENT",
          "links": [
            3
          ]
        }
      ],
      "properties": {
        "cnr_id": "comfy-core",
        "ver": "0.3.15",
        "Node name for S&R": "KSampler"
      },
      "widgets_values": [
        419716353039943,
        "fixed",
        20,
        8,
        "euler",
        "normal",
        1
      ]
    }
  ],
  "links": [
    [
      1,
      1,
      0,
      2,
      0,
      "MODEL"
    ],
    [
      2,
      1,
      2,
      3,
      1,
      "VAE"
    ],
    [
      3,
      2,
      0,
      3,
      0,
      "LATENT"
    ],
    [
      4,
      3,
      0,
      4,
      0,
      "IMAGE"
    ],
    [
      5,
      1,
      1,
      5,
      0,
      "CLIP"
    ],
    [
      6,
      5,
      0,
      2,
      1,
      "CONDITIONING"
    ],
    [
      7,
      5,
      1,
      2,
      2,
      "CONDITIONING"
    ],
    [
      9,
      9,
      0,
      7,
      0,
      "LATENT"
    ],
    [
      10,
      10,
      2,
      7,
      1,
      "VAE"
    ],
    [
      11,
      7,
      0,
      8,
      0,
      "IMAGE"
    ],
    [
      12,
      10,
      0,
      9,
      0,
      "MODEL"
    ],
    [
      15,
      10,
      1,
      11,
      0,
      "CLIP"
    ],
    [
      16,
      11,
      0,
      9,
      1,
      "CONDITIONING"
    ],
    [
      17,
      10,
      1,
      12,
      0,
      "CLIP"
    ],
    [
      18,
      12,
      0,
      9,
      2,
      "CONDITIONING"
    ],
    [
      19,
      15,
      0,
      2,
      3,
      "LATENT"
    ],
    [
      20,
      16,
      0,
      9,
      3,
      "LATENT"
    ]
  ],
  "groups": [
    {
      "id": 1,
      "title": "Prompt Refiner Light - PRL",
      "bounding": [
        529.7135620117188,
        553.352294921875,
        370.61529541015625,
        318.7279357910156
      ],
      "color": "#0a470b",
      "font_size": 29,
      "flags": {}
    },
    {
      "id": 3,
      "title": "Prompt Refiner Light - PRL",
      "bounding": [
        569.64453125,
        -28.736934661865234,
        370.61529541015625,
        318.7279357910156
      ],
      "color": "#0a470b",
      "font_size": 29,
      "flags": {}
    },
    {
      "id": 4,
      "title": "Simple Workflow",
      "bounding": [
        188.91140747070312,
        509.7523498535156,
        1553.2154541015625,
        446.0480041503906
      ],
      "color": "#3f789e",
      "font_size": 24,
      "flags": {}
    },
    {
      "id": 5,
      "title": "Simple Workflow",
      "bounding": [
        134.4973907470703,
        -743.1470947265625,
        1730.370849609375,
        654.0157470703125
      ],
      "color": "#3f789e",
      "font_size": 24,
      "flags": {}
    },
    {
      "id": 6,
      "title": "KSampler Notes",
      "bounding": [
        920.5844116210938,
        967.6141357421875,
        533.5712890625,
        177.58242797851562
      ],
      "color": "#3f789e",
      "font_size": 24,
      "flags": {}
    }
  ],
  "config": {},
  "extra": {
    "ds": {
      "scale": 0.6830134553650709,
      "offset": [
        133.60696954496987,
        426.3874244465332
      ]
    },
    "ue_links": [],
    "VHS_latentpreview": false,
    "VHS_latentpreviewrate": 0,
    "VHS_MetadataImage": true,
    "VHS_KeepIntermediate": true
  },
  "version": 0.4
}